/**
 * Copyright (c) 2021 Kuba Birecki
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/issi_transform.h>

#include <dt-bindings/zmk/animation.h>

/ {
	model = "Muri ONE";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,i2c0 = &i2c0;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	kscan0: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";

		col-gpios
			= <&gpio0 10 GPIO_ACTIVE_HIGH>
			, <&gpio0 9 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
			, <&gpio0 25 GPIO_ACTIVE_HIGH>
			, <&gpio0 21 GPIO_ACTIVE_HIGH>
			, <&gpio0 19 GPIO_ACTIVE_HIGH>
			, <&gpio0 15 GPIO_ACTIVE_HIGH>
			, <&gpio0 20 GPIO_ACTIVE_HIGH>
			, <&gpio0 23 GPIO_ACTIVE_HIGH>
			;

		row-gpios
			= <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <9>;
		rows = <11>;

		map = <
			RC(10,1) RC(9,1) RC(10,2) RC(9,2) RC(10,3) RC(9,3) RC(10,4) RC(9,4) RC(10,5) RC(9,5) RC(10,6) RC(9,6) RC(10,7) RC(9,7) RC(10,8) RC(9,8)
			RC(8,0) RC(8,1) RC(7,1) RC(8,2) RC(7,2) RC(8,3) RC(7,3) RC(8,4) RC(7,4) RC(8,5) RC(7,5) RC(8,6) RC(7,6) RC(8,7) RC(7,7) RC(8,8) RC(7,8) RC(6,8)
			RC(6,0) RC(6,1) RC(5,1) RC(6,2) RC(5,2) RC(6,3) RC(5,3) RC(6,4) RC(5,4) RC(6,5) RC(5,5) RC(6,6) RC(5,6) RC(6,7) RC(5,7) RC(5,8) RC(4,8) RC(3,8)
			RC(4,0) RC(4,1) RC(4,2) RC(3,2) RC(4,3) RC(3,3) RC(4,4) RC(3,4) RC(4,5) RC(3,5) RC(4,6) RC(3,6) RC(4,7) RC(3,7)
			RC(2,0) RC(2,1) RC(2,2) RC(1,2) RC(0,3) RC(2,3) RC(1,3) RC(2,4) RC(1,4) RC(2,5) RC(1,5) RC(2,6) RC(2,7) RC(2,8)
			RC(0,0) RC(0,1) RC(1,1) RC(0,2) RC(0,4) RC(0,5) RC(0,6) RC(1,6) RC(1,7) RC(0,7) RC(1,8) RC(0,8)
		>;
	};

	animation {
		compatible = "zmk,animation";
		drivers = <&led_matrix>;
		animations = <&solid_peach_purple &solid_miami_green>;

		pixels
			= <&solid_peach_purple 21 255>
			, <&solid_peach_purple 48 255>
			, <&solid_peach_purple 61 255>
			, <&solid_peach_purple 75 255>
			, <&solid_peach_purple 89 255>
			, <&solid_peach_purple 109 255>
			, <&solid_peach_purple 123 255>
			, <&solid_peach_purple 136 255>
			, <&solid_peach_purple 150 255>
			, <&solid_peach_purple 170 255>
			, <&solid_peach_purple 184 255>
			, <&solid_peach_purple 197 255>
			, <&solid_peach_purple 211 255>
			, <&solid_peach_purple 227 255>
			, <&solid_peach_purple 241 255>
			, <&solid_peach_purple 255 255>
			, <&solid_peach_purple 0 204>
			, <&solid_peach_purple 21 204>
			, <&solid_peach_purple 34 204>
			, <&solid_peach_purple 48 204>
			, <&solid_peach_purple 61 204>
			, <&solid_peach_purple 75 204>
			, <&solid_peach_purple 89 204>
			, <&solid_peach_purple 102 204>
			, <&solid_peach_purple 116 204>
			, <&solid_peach_purple 129 204>
			, <&solid_peach_purple 143 204>
			, <&solid_peach_purple 156 204>
			, <&solid_peach_purple 170 204>
			, <&solid_peach_purple 184 204>
			, <&solid_peach_purple 204 204>
			, <&solid_peach_purple 227 204>
			, <&solid_peach_purple 241 204>
			, <&solid_peach_purple 255 204>
			, <&solid_peach_purple 0 153>
			, <&solid_peach_purple 24 153>
			, <&solid_peach_purple 41 153>
			, <&solid_peach_purple 55 153>
			, <&solid_peach_purple 68 153>
			, <&solid_peach_purple 82 153>
			, <&solid_peach_purple 95 153>
			, <&solid_peach_purple 109 153>
			, <&solid_peach_purple 122 153>
			, <&solid_peach_purple 136 153>
			, <&solid_peach_purple 149 153>
			, <&solid_peach_purple 163 153>
			, <&solid_peach_purple 176 153>
			, <&solid_peach_purple 190 153>
			, <&solid_peach_purple 208 153>
			, <&solid_peach_purple 227 153>
			, <&solid_peach_purple 241 153>
			, <&solid_peach_purple 255 153>
			, <&solid_peach_purple 0 102>
			, <&solid_peach_purple 26 102>
			, <&solid_peach_purple 45 102>
			, <&solid_peach_purple 58 102>
			, <&solid_peach_purple 72 102>
			, <&solid_peach_purple 85 102>
			, <&solid_peach_purple 99 102>
			, <&solid_peach_purple 112 102>
			, <&solid_peach_purple 126 102>
			, <&solid_peach_purple 139 102>
			, <&solid_peach_purple 153 102>
			, <&solid_peach_purple 166 102>
			, <&solid_peach_purple 180 102>
			, <&solid_peach_purple 202 102>
			, <&solid_peach_purple 0 51>
			, <&solid_peach_purple 29 51>
			, <&solid_peach_purple 51 51>
			, <&solid_peach_purple 64 51>
			, <&solid_peach_purple 78 51>
			, <&solid_peach_purple 91 51>
			, <&solid_peach_purple 105 51>
			, <&solid_peach_purple 118 51>
			, <&solid_peach_purple 132 51>
			, <&solid_peach_purple 145 51>
			, <&solid_peach_purple 159 51>
			, <&solid_peach_purple 172 51>
			, <&solid_peach_purple 199 51>
			, <&solid_peach_purple 241 51>
			, <&solid_peach_purple 0 0>
			, <&solid_peach_purple 22 0>
			, <&solid_peach_purple 39 0>
			, <&solid_peach_purple 56 0>
			, <&solid_peach_purple 107 0>
			, <&solid_peach_purple 158 0>
			, <&solid_peach_purple 175 0>
			, <&solid_peach_purple 192 0>
			, <&solid_peach_purple 209 0>
			, <&solid_peach_purple 227 0>
			, <&solid_peach_purple 241 0>
			, <&solid_peach_purple 255 0>
			, <&solid_miami_green 0 0>
			, <&solid_miami_green 64 0>
			, <&solid_miami_green 128 0>
			, <&solid_miami_green 192 0>
			, <&solid_miami_green 255 0>
			;
	};

	solid_peach_purple: animation_0 {
		compatible = "zmk,animation-solid";
		status = "okay";

		label = "solid1";
		#pixel-cells = <2>;

		duration = <15>;
		colors = <
			HSL(30, 93, 71)
			HSL(256, 50, 40)
		>;
	};

	solid_miami_green: animation_1 {
		compatible = "zmk,animation-solid";
		status = "okay";

		label = "solid2";
		#pixel-cells = <2>;

		duration = <10>;
		colors = <
			HSL(82, 100, 67)
			HSL(174, 100, 62)
		>;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&i2c0 {
	compatible = "nordic,nrf-twi";
	status = "okay";
	clock-frequency = <400000>;
	sda-pin = <41>;
	scl-pin = <40>;

	slider: cy8cmbr3106s@37 {
		compatible = "cypress,cy8cmbr3106s";
		label = "CY8CMBR3106S";
		reg = <0x37>;
		trigger-gpios = <&gpio1 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};

	led_matrix: is31fl3741@30 {
		compatible = "issi,is31fl3741";
		label = "IS31FL3741";
		reg = <0x30>;
		r-ext = <68>;
		led-max-current = <5>;
		sdb-gpios = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <97>;

		map = <
			RGB(SW(7), CS(14), CS(13), CS(15))
			RGB(SW(9), CS(14), CS(13), CS(15))
			RGB(SW(5), CS(14), CS(13), CS(15))
			RGB(SW(4), CS(14), CS(13), CS(15))
			RGB(SW(3), CS(14), CS(13), CS(15))
			RGB(SW(2), CS(14), CS(13), CS(15))
			RGB(SW(1), CS(14), CS(13), CS(15))

			RGB(SW(1), CS(35), CS(34), CS(36))
			RGB(SW(2), CS(35), CS(34), CS(36))
			RGB(SW(3), CS(35), CS(34), CS(36))
			RGB(SW(4), CS(35), CS(34), CS(36))
			RGB(SW(5), CS(35), CS(34), CS(36))
			RGB(SW(9), CS(35), CS(34), CS(36))
			RGB(SW(6), CS(35), CS(34), CS(36))
			RGB(SW(7), CS(35), CS(34), CS(36))
			RGB(SW(8), CS(35), CS(34), CS(36))

			RGB(SW(8), CS(11), CS(12), CS(10))
			RGB(SW(7), CS(11), CS(12), CS(10))
			RGB(SW(6), CS(11), CS(12), CS(10))
			RGB(SW(9), CS(11), CS(12), CS(10))
			RGB(SW(5), CS(11), CS(12), CS(10))
			RGB(SW(4), CS(11), CS(12), CS(10))
			RGB(SW(3), CS(11), CS(12), CS(10))
			RGB(SW(2), CS(11), CS(12), CS(10))
			RGB(SW(1), CS(11), CS(12), CS(10))

			RGB(SW(1), CS(32), CS(33), CS(31))
			RGB(SW(2), CS(32), CS(33), CS(31))
			RGB(SW(3), CS(32), CS(33), CS(31))
			RGB(SW(4), CS(32), CS(33), CS(31))
			RGB(SW(5), CS(32), CS(33), CS(31))
			RGB(SW(9), CS(32), CS(33), CS(31))
			RGB(SW(6), CS(32), CS(33), CS(31))
			RGB(SW(7), CS(32), CS(33), CS(31))
			RGB(SW(8), CS(32), CS(33), CS(31))

			RGB(SW(8), CS(17), CS(16), CS(18))
			RGB(SW(7), CS(17), CS(16), CS(18))
			RGB(SW(6), CS(17), CS(16), CS(18))
			RGB(SW(9), CS(17), CS(16), CS(18))
			RGB(SW(5), CS(17), CS(16), CS(18))
			RGB(SW(4), CS(17), CS(16), CS(18))
			RGB(SW(3), CS(17), CS(16), CS(18))
			RGB(SW(2), CS(17), CS(16), CS(18))
			RGB(SW(1), CS(17), CS(16), CS(18))

			RGB(SW(1), CS(29), CS(30), CS(28))
			RGB(SW(2), CS(29), CS(30), CS(28))
			RGB(SW(3), CS(29), CS(30), CS(28))
			RGB(SW(4), CS(29), CS(30), CS(28))
			RGB(SW(5), CS(29), CS(30), CS(28))
			RGB(SW(9), CS(29), CS(30), CS(28))
			RGB(SW(6), CS(29), CS(30), CS(28))
			RGB(SW(7), CS(29), CS(30), CS(28))
			RGB(SW(8), CS(29), CS(30), CS(28))

			RGB(SW(8), CS(5), CS(6), CS(4))
			RGB(SW(7), CS(5), CS(6), CS(4))
			RGB(SW(9), CS(5), CS(6), CS(4))
			RGB(SW(5), CS(5), CS(6), CS(4))
			RGB(SW(4), CS(5), CS(6), CS(4))
			RGB(SW(3), CS(5), CS(6), CS(4))
			RGB(SW(2), CS(5), CS(6), CS(4))
			RGB(SW(1), CS(5), CS(6), CS(4))

			RGB(SW(1), CS(26), CS(27), CS(25))
			RGB(SW(2), CS(26), CS(27), CS(25))
			RGB(SW(3), CS(26), CS(27), CS(25))
			RGB(SW(4), CS(26), CS(27), CS(25))
			RGB(SW(5), CS(26), CS(27), CS(25))
			RGB(SW(9), CS(26), CS(27), CS(25))

			RGB(SW(8), CS(8), CS(7), CS(9))
			RGB(SW(7), CS(8), CS(7), CS(9))
			RGB(SW(5), CS(8), CS(7), CS(9))
			RGB(SW(4), CS(8), CS(7), CS(9))
			RGB(SW(3), CS(8), CS(7), CS(9))
			RGB(SW(2), CS(8), CS(7), CS(9))
			RGB(SW(1), CS(8), CS(7), CS(9))

			RGB(SW(1), CS(20), CS(19), CS(21))
			RGB(SW(2), CS(20), CS(19), CS(21))
			RGB(SW(3), CS(20), CS(19), CS(21))
			RGB(SW(4), CS(20), CS(19), CS(21))
			RGB(SW(5), CS(20), CS(19), CS(21))
			RGB(SW(9), CS(20), CS(19), CS(21))
			RGB(SW(7), CS(20), CS(19), CS(21))

			RGB(SW(8), CS(2), CS(3), CS(1))
			RGB(SW(7), CS(2), CS(3), CS(1))
			RGB(SW(5), CS(2), CS(3), CS(1))
			RGB(SW(4), CS(2), CS(3), CS(1))
			RGB(SW(2), CS(2), CS(3), CS(1))

			RGB(SW(3), CS(38), CS(37), CS(39))
			RGB(SW(4), CS(38), CS(37), CS(39))
			RGB(SW(5), CS(38), CS(37), CS(39))
			RGB(SW(9), CS(38), CS(37), CS(39))
			RGB(SW(6), CS(38), CS(37), CS(39))
			RGB(SW(7), CS(38), CS(37), CS(39))
			RGB(SW(8), CS(38), CS(37), CS(39))

			RGB(SW(6), CS(26), CS(27), CS(25))
			RGB(SW(6), CS(20), CS(19), CS(21))
			RGB(SW(7), CS(26), CS(27), CS(25))
			RGB(SW(8), CS(20), CS(19), CS(21))
			RGB(SW(8), CS(26), CS(27), CS(25))
		>;

		red-gamma = <
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
			0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1
			1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2
			2 3 3 3 3 3 3 3 4 4 4 4 4 5 5 5
			5 6 6 6 6 7 7 7 7 8 8 8 9 9 9 10
			10 10 11 11 11 12 12 13 13 13 14 14 15 15 16 16
			17 17 18 18 19 19 20 20 21 21 22 22 23 24 24 25
			25 26 27 27 28 29 29 30 31 32 32 33 34 35 35 36
			37 38 39 39 40 41 42 43 44 45 46 47 48 49 50 50
			51 52 54 55 56 57 58 59 60 61 62 63 64 66 67 68
			69 70 72 73 74 75 77 78 79 81 82 83 85 86 87 89
			90 92 93 95 96 98 99 101 102 104 105 107 109 110 112 114
			115 117 119 120 122 124 126 127 129 131 133 135 137 138 140 142
			144 146 148 150 152 154 156 158 160 162 164 167 169 171 173 175
			177 180 182 184 186 189 191 193 196 198 200 203 205 208 210 213
			215 218 220 223 225 228 231 233 236 239 241 244 247 249 252 255
		>;

		green-gamma = <
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
			0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1
			1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2
			2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3
			3 4 4 4 4 4 4 4 5 5 5 5 5 5 5 6
			6 6 6 6 6 7 7 7 7 7 8 8 8 8 8 9
			9 9 9 10 10 10 10 11 11 11 11 12 12 12 12 13
			13 13 14 14 14 14 15 15 15 16 16 16 17 17 17 18
			18 18 19 19 19 20 20 21 21 21 22 22 23 23 23 24
			24 25 25 25 26 26 27 27 28 28 29 29 30 30 31 31
			32 32 33 33 34 34 35 35 36 36 37 37 38 39 39 40
			40 41 42 42 43 43 44 45 45 46 46 47 48 48 49 50
			50 51 52 53 53 54 55 55 56 57 58 58 59 60 61 61
			62 63 64 64 65 66 67 68 68 69 70 71 72 73 74 74
			75 76 77 78 79 80 81 82 83 83 84 85 86 87 88 89
		>;

		blue-gamma = <
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
			0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1
			1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2
			2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3
			3 3 3 3 3 4 4 4 4 4 4 4 4 5 5 5
			5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7
			8 8 8 8 8 9 9 9 9 9 10 10 10 10 11 11
			11 11 12 12 12 12 13 13 13 13 14 14 14 15 15 15
			15 16 16 16 17 17 17 18 18 18 19 19 19 20 20 20
			21 21 21 22 22 23 23 23 24 24 25 25 25 26 26 27
			27 28 28 28 29 29 30 30 31 31 32 32 33 33 34 34
			35 35 36 36 37 37 38 38 39 39 40 40 41 42 42 43
			43 44 44 45 46 46 47 47 48 49 49 50 51 51 52 53
			53 54 55 55 56 57 57 58 59 59 60 61 62 62 63 64
			65 65 66 67 68 68 69 70 71 72 72 73 74 75 76 77
		>;
	};
};

&usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
