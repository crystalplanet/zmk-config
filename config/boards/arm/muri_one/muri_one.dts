/**
 * Copyright (c) 2021 Kuba Birecki
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/issi_transform.h>

#include <dt-bindings/zmk/animation.h>
#include <dt-bindings/zmk/animation_compose.h>

/ {
	model = "Muri ONE";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,i2c0 = &i2c0;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	kscan0: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";

		col-gpios
			= <&gpio0 10 GPIO_ACTIVE_HIGH>
			, <&gpio0 9 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
			, <&gpio0 25 GPIO_ACTIVE_HIGH>
			, <&gpio0 21 GPIO_ACTIVE_HIGH>
			, <&gpio0 19 GPIO_ACTIVE_HIGH>
			, <&gpio0 15 GPIO_ACTIVE_HIGH>
			, <&gpio0 20 GPIO_ACTIVE_HIGH>
			, <&gpio0 23 GPIO_ACTIVE_HIGH>
			;

		row-gpios
			= <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <9>;
		rows = <11>;

		map = <
			RC(10,1) RC(9,1) RC(10,2) RC(9,2) RC(10,3) RC(9,3) RC(10,4) RC(9,4) RC(10,5) RC(9,5) RC(10,6) RC(9,6) RC(10,7) RC(9,7) RC(10,8) RC(9,8)
			RC(8,0) RC(8,1) RC(7,1) RC(8,2) RC(7,2) RC(8,3) RC(7,3) RC(8,4) RC(7,4) RC(8,5) RC(7,5) RC(8,6) RC(7,6) RC(8,7) RC(7,7) RC(8,8) RC(7,8) RC(6,8)
			RC(6,0) RC(6,1) RC(5,1) RC(6,2) RC(5,2) RC(6,3) RC(5,3) RC(6,4) RC(5,4) RC(6,5) RC(5,5) RC(6,6) RC(5,6) RC(6,7) RC(5,7) RC(5,8) RC(4,8) RC(3,8)
			RC(4,0) RC(4,1) RC(4,2) RC(3,2) RC(4,3) RC(3,3) RC(4,4) RC(3,4) RC(4,5) RC(3,5) RC(4,6) RC(3,6) RC(4,7) RC(3,7)
			RC(2,0) RC(2,1) RC(2,2) RC(1,2) RC(0,3) RC(2,3) RC(1,3) RC(2,4) RC(1,4) RC(2,5) RC(1,5) RC(2,6) RC(2,7) RC(2,8)
			RC(0,0) RC(0,1) RC(1,1) RC(0,2) RC(0,4) RC(0,5) RC(0,6) RC(1,6) RC(1,7) RC(0,7) RC(1,8) RC(0,8)
		>;
	};

	animation {
		compatible = "zmk,animation";
		drivers = <&led_matrix>;
		animations = <
			&zone_modifiers &zone_keys &zone_strip
			&color_pink &color_blue
			&effect_ripple
		>;

		pixels
			= <&zone_modifiers 21 68>
			, <&zone_keys 48 68>
			, <&zone_keys 61 68>
			, <&zone_keys 75 68>
			, <&zone_keys 89 68>
			, <&zone_modifiers 109 68>
			, <&zone_modifiers 123 68>
			, <&zone_modifiers 136 68>
			, <&zone_modifiers 150 68>
			, <&zone_keys 170 68>
			, <&zone_keys 184 68>
			, <&zone_keys 197 68>
			, <&zone_keys 211 68>
			, <&zone_modifiers 227 68>
			, <&zone_modifiers 241 68>
			, <&zone_modifiers 255 68>
			, <&zone_keys 0 54>
			, <&zone_keys 21 54>
			, <&zone_keys 34 54>
			, <&zone_keys 48 54>
			, <&zone_keys 61 54>
			, <&zone_keys 75 54>
			, <&zone_keys 89 54>
			, <&zone_keys 102 54>
			, <&zone_keys 116 54>
			, <&zone_keys 129 54>
			, <&zone_keys 143 54>
			, <&zone_keys 156 54>
			, <&zone_keys 170 54>
			, <&zone_keys 184 54>
			, <&zone_modifiers 204 54>
			, <&zone_modifiers 227 54>
			, <&zone_modifiers 241 54>
			, <&zone_modifiers 255 54>
			, <&zone_keys 0 41>
			, <&zone_modifiers 24 41>
			, <&zone_keys 41 41>
			, <&zone_keys 55 41>
			, <&zone_keys 68 41>
			, <&zone_keys 82 41>
			, <&zone_keys 95 41>
			, <&zone_keys 109 41>
			, <&zone_keys 122 41>
			, <&zone_keys 136 41>
			, <&zone_keys 149 41>
			, <&zone_keys 163 41>
			, <&zone_keys 176 41>
			, <&zone_keys 190 41>
			, <&zone_keys 208 41>
			, <&zone_modifiers 227 41>
			, <&zone_modifiers 241 41>
			, <&zone_modifiers 255 41>
			, <&zone_keys 0 27>
			, <&zone_modifiers 26 27>
			, <&zone_keys 45 27>
			, <&zone_keys 58 27>
			, <&zone_keys 72 27>
			, <&zone_keys 85 27>
			, <&zone_keys 99 27>
			, <&zone_keys 112 27>
			, <&zone_keys 126 27>
			, <&zone_keys 139 27>
			, <&zone_keys 153 27>
			, <&zone_keys 166 27>
			, <&zone_keys 180 27>
			, <&zone_modifiers 202 27>
			, <&zone_keys 0 14>
			, <&zone_modifiers 29 14>
			, <&zone_keys 51 14>
			, <&zone_keys 64 14>
			, <&zone_keys 78 14>
			, <&zone_keys 91 14>
			, <&zone_keys 105 14>
			, <&zone_keys 118 14>
			, <&zone_keys 132 14>
			, <&zone_keys 145 14>
			, <&zone_keys 159 14>
			, <&zone_keys 172 14>
			, <&zone_modifiers 199 14>
			, <&zone_modifiers 241 14>
			, <&zone_keys 0 0>
			, <&zone_modifiers 22 0>
			, <&zone_modifiers 39 0>
			, <&zone_modifiers 56 0>
			, <&zone_modifiers 107 0>
			, <&zone_modifiers 158 0>
			, <&zone_modifiers 175 0>
			, <&zone_modifiers 192 0>
			, <&zone_modifiers 209 0>
			, <&zone_modifiers 227 0>
			, <&zone_modifiers 241 0>
			, <&zone_modifiers 255 0>
			, <&zone_strip 0 0>
			, <&zone_strip 64 0>
			, <&zone_strip 128 0>
			, <&zone_strip 192 0>
			, <&zone_strip 255 0>
			;
	};

	zone_modifiers: animation_0 {
		compatible = "zmk,animation-compose";
		status = "okay";

		label = "zone_modifiers";
		#pixel-cells = <2>;

		animations = <
			&color_pink
			&effect_ripple
		>;
		blending-modes = <
			BLENDING_MODE_NORMAL
			BLENDING_MODE_SUBTRACT
		>;
	};

	zone_keys: animation_1 {
		compatible = "zmk,animation-compose";
		status = "okay";

		label = "zone_keys";
		#pixel-cells = <2>;

		animations = <
			&color_blue
			&effect_ripple
		>;
		blending-modes = <
			BLENDING_MODE_NORMAL
			BLENDING_MODE_SUBTRACT
		>;
	};

	zone_strip: animation_2 {
		compatible = "zmk,animation-solid";
		status = "okay";

		label = "zone_strip";
		#pixel-cells = <2>;

		duration = <5>;
		colors = <
			HSL(82, 100, 67)
			HSL(174, 100, 62)
		>;
	};

	color_pink: animation_3 {
		compatible = "zmk,animation-solid";
		status = "okay";

		label = "color_pink";
		#pixel-cells = <2>;

		colors = <HSL(310, 88, 77)>;
	};

	color_blue: animation_4 {
		compatible = "zmk,animation-solid";
		status = "okay";

		label = "color_blue";
		#pixel-cells = <2>;

		colors = <HSL(180, 90, 44)>;
	};

	effect_ripple: animation_5 {
		compatible = "zmk,animation-ripple";
		status = "okay";

		label = "effect_ripple";
		#pixel-cells = <2>;

		duration = <1000>;
		color = <HSL(0, 0, 100)>;
		ripple-width = <50>;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&i2c0 {
	compatible = "nordic,nrf-twi";
	status = "okay";
	clock-frequency = <400000>;
	sda-pin = <41>;
	scl-pin = <40>;

	slider: cy8cmbr3106s@37 {
		compatible = "cypress,cy8cmbr3106s";
		label = "CY8CMBR3106S";
		reg = <0x37>;
		trigger-gpios = <&gpio1 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};

	led_matrix: is31fl3741@30 {
		compatible = "issi,is31fl3741";
		label = "IS31FL3741";
		reg = <0x30>;
		r-ext = <68>;
		led-max-current = <5>;
		sdb-gpios = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <97>;

		map = <
			RGB(SW(7), CS(14), CS(13), CS(15))
			RGB(SW(9), CS(14), CS(13), CS(15))
			RGB(SW(5), CS(14), CS(13), CS(15))
			RGB(SW(4), CS(14), CS(13), CS(15))
			RGB(SW(3), CS(14), CS(13), CS(15))
			RGB(SW(2), CS(14), CS(13), CS(15))
			RGB(SW(1), CS(14), CS(13), CS(15))

			RGB(SW(1), CS(35), CS(34), CS(36))
			RGB(SW(2), CS(35), CS(34), CS(36))
			RGB(SW(3), CS(35), CS(34), CS(36))
			RGB(SW(4), CS(35), CS(34), CS(36))
			RGB(SW(5), CS(35), CS(34), CS(36))
			RGB(SW(9), CS(35), CS(34), CS(36))
			RGB(SW(6), CS(35), CS(34), CS(36))
			RGB(SW(7), CS(35), CS(34), CS(36))
			RGB(SW(8), CS(35), CS(34), CS(36))

			RGB(SW(8), CS(11), CS(12), CS(10))
			RGB(SW(7), CS(11), CS(12), CS(10))
			RGB(SW(6), CS(11), CS(12), CS(10))
			RGB(SW(9), CS(11), CS(12), CS(10))
			RGB(SW(5), CS(11), CS(12), CS(10))
			RGB(SW(4), CS(11), CS(12), CS(10))
			RGB(SW(3), CS(11), CS(12), CS(10))
			RGB(SW(2), CS(11), CS(12), CS(10))
			RGB(SW(1), CS(11), CS(12), CS(10))

			RGB(SW(1), CS(32), CS(33), CS(31))
			RGB(SW(2), CS(32), CS(33), CS(31))
			RGB(SW(3), CS(32), CS(33), CS(31))
			RGB(SW(4), CS(32), CS(33), CS(31))
			RGB(SW(5), CS(32), CS(33), CS(31))
			RGB(SW(9), CS(32), CS(33), CS(31))
			RGB(SW(6), CS(32), CS(33), CS(31))
			RGB(SW(7), CS(32), CS(33), CS(31))
			RGB(SW(8), CS(32), CS(33), CS(31))

			RGB(SW(8), CS(17), CS(16), CS(18))
			RGB(SW(7), CS(17), CS(16), CS(18))
			RGB(SW(6), CS(17), CS(16), CS(18))
			RGB(SW(9), CS(17), CS(16), CS(18))
			RGB(SW(5), CS(17), CS(16), CS(18))
			RGB(SW(4), CS(17), CS(16), CS(18))
			RGB(SW(3), CS(17), CS(16), CS(18))
			RGB(SW(2), CS(17), CS(16), CS(18))
			RGB(SW(1), CS(17), CS(16), CS(18))

			RGB(SW(1), CS(29), CS(30), CS(28))
			RGB(SW(2), CS(29), CS(30), CS(28))
			RGB(SW(3), CS(29), CS(30), CS(28))
			RGB(SW(4), CS(29), CS(30), CS(28))
			RGB(SW(5), CS(29), CS(30), CS(28))
			RGB(SW(9), CS(29), CS(30), CS(28))
			RGB(SW(6), CS(29), CS(30), CS(28))
			RGB(SW(7), CS(29), CS(30), CS(28))
			RGB(SW(8), CS(29), CS(30), CS(28))

			RGB(SW(8), CS(5), CS(6), CS(4))
			RGB(SW(7), CS(5), CS(6), CS(4))
			RGB(SW(9), CS(5), CS(6), CS(4))
			RGB(SW(5), CS(5), CS(6), CS(4))
			RGB(SW(4), CS(5), CS(6), CS(4))
			RGB(SW(3), CS(5), CS(6), CS(4))
			RGB(SW(2), CS(5), CS(6), CS(4))
			RGB(SW(1), CS(5), CS(6), CS(4))

			RGB(SW(1), CS(26), CS(27), CS(25))
			RGB(SW(2), CS(26), CS(27), CS(25))
			RGB(SW(3), CS(26), CS(27), CS(25))
			RGB(SW(4), CS(26), CS(27), CS(25))
			RGB(SW(5), CS(26), CS(27), CS(25))
			RGB(SW(9), CS(26), CS(27), CS(25))

			RGB(SW(8), CS(8), CS(7), CS(9))
			RGB(SW(7), CS(8), CS(7), CS(9))
			RGB(SW(5), CS(8), CS(7), CS(9))
			RGB(SW(4), CS(8), CS(7), CS(9))
			RGB(SW(3), CS(8), CS(7), CS(9))
			RGB(SW(2), CS(8), CS(7), CS(9))
			RGB(SW(1), CS(8), CS(7), CS(9))

			RGB(SW(1), CS(20), CS(19), CS(21))
			RGB(SW(2), CS(20), CS(19), CS(21))
			RGB(SW(3), CS(20), CS(19), CS(21))
			RGB(SW(4), CS(20), CS(19), CS(21))
			RGB(SW(5), CS(20), CS(19), CS(21))
			RGB(SW(9), CS(20), CS(19), CS(21))
			RGB(SW(7), CS(20), CS(19), CS(21))

			RGB(SW(8), CS(2), CS(3), CS(1))
			RGB(SW(7), CS(2), CS(3), CS(1))
			RGB(SW(5), CS(2), CS(3), CS(1))
			RGB(SW(4), CS(2), CS(3), CS(1))
			RGB(SW(2), CS(2), CS(3), CS(1))

			RGB(SW(3), CS(38), CS(37), CS(39))
			RGB(SW(4), CS(38), CS(37), CS(39))
			RGB(SW(5), CS(38), CS(37), CS(39))
			RGB(SW(9), CS(38), CS(37), CS(39))
			RGB(SW(6), CS(38), CS(37), CS(39))
			RGB(SW(7), CS(38), CS(37), CS(39))
			RGB(SW(8), CS(38), CS(37), CS(39))

			RGB(SW(6), CS(26), CS(27), CS(25))
			RGB(SW(6), CS(20), CS(19), CS(21))
			RGB(SW(7), CS(26), CS(27), CS(25))
			RGB(SW(8), CS(20), CS(19), CS(21))
			RGB(SW(8), CS(26), CS(27), CS(25))
		>;

		// Theoretically, it consumes ~78.5 - 89mA with LEDs on max brightness white
		// using these settings
		//
		// Which gives ~18h.
		red-gamma = <
			0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3
			4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7
			8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11
			12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15
			16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19
			20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23
			24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27
			28 28 28 28 29 29 29 29 32 32 32 32 35 35 35 35
			38 38 38 38 42 42 42 42 45 45 45 45 49 49 49 49
			53 53 53 53 57 57 57 57 62 62 62 62 67 67 67 67
			71 71 71 71 77 77 77 77 82 82 82 82 88 88 88 88
			93 93 93 93 99 99 99 99 106 106 106 106 112 112 112 112
			119 119 119 119 126 126 126 126 134 134 134 134 141 141 141 141
			149 149 149 149 157 157 157 157 166 166 166 166 174 174 174 174
			183 183 183 183 193 193 193 193 202 202 202 202 212 212 212 212
			222 222 222 222 233 233 233 233 244 244 244 244 255 255 255 255
		>;

		green-gamma = <
			0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3
			4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7
			8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11
			12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15
			16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19
			20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23
			24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27
			28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31
			32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35
			36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39
			40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43
			44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47
			48 48 48 48 49 49 49 49 50 50 50 50 51 51 51 51
			52 52 52 52 55 55 55 55 58 58 58 58 61 61 61 61
			64 64 64 64 67 67 67 67 71 71 71 71 74 74 74 74
			78 78 78 78 82 82 82 82 85 85 85 85 89 89 89 89
		>;

		blue-gamma = <
			0 0 0 0 1 1 1 1 2 2 2 2 3 3 3 3
			4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7
			8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11
			12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15
			16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19
			20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23
			24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27
			28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31
			32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35
			36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39
			40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43
			44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47
			48 48 48 48 49 49 49 49 50 50 50 50 51 51 51 51
			52 52 52 52 53 53 53 53 54 54 54 54 55 55 55 55
			56 56 56 56 58 58 58 58 61 61 61 61 64 64 64 64
			67 67 67 67 70 70 70 70 73 73 73 73 77 77 77 77
		>;
	};
};

&usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
